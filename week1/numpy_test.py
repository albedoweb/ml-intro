# -*- coding: utf-8 -*-
"""
Простые упражнения с матрицами, работа с пакетом NumPy
"""
import numpy as np

# Сгенерируйте матрицу, состоящую из 1000 строк и 50 столбцов,
# элементы которой являются случайными из нормального распределения N(1,10).
X = np.random.normal(loc=1, scale=10, size=(1000, 50))
print "Матрица: %s" % X


# Произведите нормировку матрицы из предыдущего задания:
# вычтите из каждого столбца его среднее значение, а затем поделите на его стандартное отклонение.
m = np.mean(X, axis=0)
std = np.std(X, axis=0)
X_norm = ((X - m) / std)
print "Нормированная матрица: %s" % X_norm


# Выведите для заданной матрицы номера строк, сумма элементов в которых превосходит 10.
Z = np.array([[4, 5, 0],
             [1, 9, 3],
             [5, 1, 1],
             [3, 3, 3],
             [9, 9, 9],
             [4, 7, 1]])

r = np.sum(Z, axis=1)
print r
print np.nonzero(r > 10)

# Сгенерируйте две единичные матрицы (т.е. с единицами на диагонали) размера 3x3.
# Соедините две матрицы в одну размера 6x3.
A = np.eye(3)
B = np.eye(3)
print A
print B
AB = np.vstack((A, B))
print "Вертикально: %s" % AB

print "Горизонтально: %s" % np.hstack((A, B))